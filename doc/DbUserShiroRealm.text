package com.root.cognition.system.config.shiro;

//import ApplicationContextRegister;
//import UserDao;
//import User;
//import MenuService;
//import UserService;
//import org.apache.shiro.authc.*;
//import org.apache.shiro.authc.credential.HashedCredentialsMatcher;
//import org.apache.shiro.authz.AuthorizationInfo;
//import org.apache.shiro.authz.SimpleAuthorizationInfo;
//import org.apache.shiro.crypto.hash.Sha256Hash;
//import org.apache.shiro.realm.AuthorizingRealm;
//import org.apache.shiro.subject.PrincipalCollection;
//import org.apache.shiro.util.ByteSource;
//import org.slf4j.Logger;
//import org.slf4j.LoggerFactory;
//import org.springframework.util.StringUtils;
//
//import java.util.HashMap;
//import java.util.Map;
//import java.util.Set;
//
//
///**
// * 同过数据库验证用户（产生token步骤）
// * @author Worry
// * @version 2019/3/3
// */
//public class DbUserShiroRealm extends AuthorizingRealm {
//
//    private final Logger log = LoggerFactory.getLogger(DbUserShiroRealm.class);
//
//    private static final String encryptSalt = "F12839WhsnnEV$#23b";
//
//    private UserService userService;
//
////    public DbUserShiroRealm(UserService userService) {
////        this.userService = userService;
////        this.setCredentialsMatcher(new HashedCredentialsMatcher(Sha256Hash.ALGORITHM_NAME));
////    }
//
//
//
//    @Override
//    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {
//        String userId = ShiroUtils.getUserId();
//        MenuService menuService = ApplicationContextRegister.getBean(MenuService.class);
//        Set<String> perms = menuService.menuListPerms(userId);
//        SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();
//        info.setStringPermissions(perms);
//        return info;
//    }
//
//    @Override
//    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {
//        //AuthenticationToken 内部代码分别为getusername与getpassword顾可以强制转换为UsernamePasswordToken
//        //这里我们存放、获取用户的唯一信息userName
//        String username = (String) authenticationToken.getPrincipal();
//        Map<String, Object> map = new HashMap<>(16);
//        map.put("username", username);
//        String password = new String((char[]) authenticationToken.getCredentials());
//
//        UserDao userMapper = ApplicationContextRegister.getBean(UserDao.class);
//        // 查询用户信息
//        User sysUser = userService.get(map);
//
//        UsernamePasswordToken userpasswordToken = (UsernamePasswordToken) authenticationToken;
//
//
//        if(StringUtils.isEmpty(sysUser)) {
//            throw new AuthenticationException("用户名错误或您尚未注册");
//        }
//        //抛给shiro判断用户是否正确
//        return new SimpleAuthenticationInfo(sysUser, sysUser.getUserPassword(), ByteSource.Util.bytes(encryptSalt), "dbRealm");
//    }
//}


 <!--<li class="layui-nav-item" style="float:right;">-->
                <!--<a href="/index">平台管理<span class="layui-badge-dot"></span></a>-->
            <!--</li>-->